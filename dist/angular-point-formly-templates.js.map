{"version":3,"sources":["apChoice.ts","apLookup.ts","formlyTemplates.ts","index.ts"],"names":["ap","ap.formly","ap.formly.APFormlyChoice","ap.formly.createChoiceArray","ap.formly.APChoiceController","ap.formly.APChoiceController.constructor","ap.formly.APFormlyLookup","ap.formly.createLookupArray","ap.formly.APLookupController","ap.formly.APLookupController.constructor","ap.formly.FormlyTemplates","ap.formly.FormlyTemplates.constructor"],"mappings":"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","file":"angular-point-formly-templates.js","sourcesContent":["/// <reference path=\"../typings/tsd.d.ts\" />\n\nmodule ap.formly {\n  'use strict';\n\n  export function APFormlyChoice() {\n\n    var directive = {\n      scope: {\n        key: '=',\n        listItem: '=',\n        multi: '=',\n        to: '=' //Template Options\n      },\n      bindToController: true,\n      controller: APChoiceController,\n      controllerAs: 'vm',\n      template: '' +\n      `<div ng-if=\"!vm.loading\">\n          <div ng-if=\"vm.multi\">\n              <div ui-select multiple ng-model=\"vm.listItem[vm.key]\">\n                  <div ui-select-match placeholder=\"{{ vm.placeholder }}\">{{ $item }}</div>\n                  <div ui-select-choices data-repeat=\"choice in vm.options | filter:$select.search\">{{ choice }}</div>\n              </div>\n          </div>\n          <div ng-if=\"!vm.multi\">\n              <div ui-select ng-model=\"vm.listItem[vm.key]\">\n                  <div ui-select-match placeholder=\"{{ vm.placeholder }}\">{{ $select.selected }}</div>\n                  <div ui-select-choices data-repeat=\"choice in vm.options | filter:$select.search\">{{ choice }}</div>\n              </div>\n          </div>\n      </div>\n      <span class=\"form-control\" ng-if=\"vm.loading\">loading...</span>`\n\n    };\n    return directive;\n  }\n\n  function createChoiceArray(options: string[] = []) {\n    return options.sort();\n  }\n\n  interface ITemplateOptions extends AngularFormly.ITemplateOptions {\n    lookupIdProperty: { (listItem: ListItem<any>): string } | string;\n    lookupValueProperty: { (listItem: ListItem<any>): string } | string;\n    options: Object[]| IndexedCache<ListItem<any>> | ng.IPromise<Object[]| IndexedCache<ListItem<any>>>;\n  }\n\n\n  class APChoiceController {\n    key: string;\n    loading = true;\n    listItem: ListItem<any>;\n    multi: boolean;\n    options: string[];\n    placeholder: string | number;\n    to: ITemplateOptions;\n    constructor() {\n      var vm = this;\n      vm.placeholder = vm.to.placeholder || '';\n      var fieldDefinition = vm.listItem.getFieldDefinition(vm.key);\n\n      if (vm.to.options) {\n        if (vm.to.options.then) {\n          /** Options aren't resolved yet */\n          vm.to.options.then(function(options: string[]) {\n            vm.options = createChoiceArray(options);\n            vm.loading = false;\n          });\n        } else {\n          /** Options passed through directly */\n          vm.options = createChoiceArray(vm.to.options);\n          vm.loading = false;\n        }\n      } else if (fieldDefinition.choices || fieldDefinition.Choices) {\n        /** Options available on field definition within model */\n        vm.options = createChoiceArray(fieldDefinition.choices || fieldDefinition.Choices);\n        vm.loading = false;\n      } else {\n        /** Last chance, get list definition from server and look for choices */\n        var model = vm.listItem.getModel();\n\n        model.extendListMetadata()\n          .then(function() {\n            if (fieldDefinition.choices || fieldDefinition.Choices) {\n              vm.options = createChoiceArray(fieldDefinition.choices || fieldDefinition.Choices);\n              vm.loading = false;\n            }\n          })\n      }\n\n    }\n  }\n\n\n}","/// <reference path=\"../typings/tsd.d.ts\" />\n\nmodule ap.formly {\n    'use strict';\n\n    /* @ngInject */\n    export function APFormlyLookup() {\n\n        var directive = {\n            scope: {\n                key: '=',\n                listItem: '=',\n                multi: '=',\n                to: '='\n\n            },\n            bindToController: true,\n            controller: APLookupController,\n            controllerAs: 'vm',\n            template: '' +\n            `<div ng-if=\"!vm.loading\">\n                <div ng-if=\"vm.multi\">\n                    <div ui-select multiple ng-model=\"vm.listItem[vm.key]\">\n                        <div ui-select-match placeholder=\"{{ vm.placeholder }}\">{{ $item.lookupValue }}</div>\n                        <div ui-select-choices data-repeat=\"lookup in vm.options | filter:{lookupValue: $select.search}\n                            track by lookup.lookupId\">{{ lookup.lookupValue }}</div>\n                    </div>\n                </div>\n                <div ng-if=\"!vm.multi\">\n                    <div ui-select ng-model=\"vm.listItem[vm.key]\">\n                        <div ui-select-match placeholder=\"{{ vm.placeholder }}\">{{ $select.selected.lookupValue }}</div>\n                        <div ui-select-choices data-repeat=\"lookup in vm.options | filter:{lookupValue: $select.search}\n                            track by lookup.lookupId\">{{ lookup.lookupValue }}</div>\n                    </div>\n                </div>\n            </div>\n            <span ng-if=\"vm.loading\">loading...</span>`\n\n        };\n        return directive;\n    }\n\n    function createLookupArray(options, lookupIdProperty: { (listItem: ListItem<any>): string } | string, lookupValueProperty: { (listItem: ListItem<any>): string } | string): Lookup[] {\n        var sortedLookupValues = [];\n        var sampleListItem = _.sample(options);\n        if (sampleListItem && sampleListItem.hasOwnProperty('lookupId')) {\n            /** Already valid lookup objects */\n            sortedLookupValues = _.sortBy(options, 'lookupValue');\n        } else if (sampleListItem) {\n            /** List items that need to ve converted into lookup objects */\n            sortedLookupValues = _.chain(options)\n                .map(function(listItem: ListItem<any>) {\n                    return {\n                        //Default is to use title for lookupValue and id for lookupId but optionally can pass in the property to use for either or\n                        //a funtion to return the value\n                        lookupId: _.isFunction(lookupIdProperty) ? lookupIdProperty(listItem) : listItem[lookupIdProperty],\n                        //can be calculated with either a function or a property name\n                        lookupValue: _.isFunction(lookupValueProperty) ? lookupValueProperty(listItem) : listItem[lookupValueProperty]\n                    }\n                })\n                .sortBy('lookupValue')\n                .value();\n        }\n        return sortedLookupValues;\n    }\n    \n    interface ITemplateOptions extends AngularFormly.ITemplateOptions {\n        lookupIdProperty: { (listItem: ListItem<any>): string } | string;\n        lookupValueProperty: { (listItem: ListItem<any>): string } | string;\n        options: Object[] | IndexedCache<ListItem<any>> | ng.IPromise<Object[] | IndexedCache<ListItem<any>>>;\n    }\n\n\n    class APLookupController {\n        key: string;\n        listItem: Object;\n        loading = true;\n        multi: boolean;\n        options: Lookup[];\n        placeholder: string | number;\n        to: ITemplateOptions;\n        constructor() {\n            var vm = this;\n            //The property to use as the lookupValue if we need to build a Lookup[]\n            var lookupIdProperty = vm.to.lookupIdProperty || 'id';\n            var lookupValueProperty = vm.to.lookupValueProperty || 'title';\n            \n            vm.placeholder = vm.to.placeholder || '';\n\n            if (vm.to.options.then) {\n                /** Options aren't resolved yet */\n                vm.to.options.then(function(options) {\n                    vm.options = createLookupArray(options, lookupIdProperty, lookupValueProperty);\n                    vm.loading = false;\n                });\n            } else {\n                vm.options = createLookupArray(vm.to.options, lookupIdProperty, lookupValueProperty);\n                vm.loading = false;\n            }\n\n        }\n    }\n\n}","/// <reference path=\"apLookup.ts\" />\n/// <reference path=\"apChoice.ts\" />\n/// <reference path=\"../typings/tsd.d.ts\" />\n\nmodule ap.formly {\n    'use strict';\n\n  export class FormlyTemplates{\n    constructor(formlyConfigProvider: AngularFormly.IFormlyConfig) {\n\n      formlyConfigProvider.setType({\n        name: 'lookup',\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n        template: `<ap-lookup list-item=\"model\" key=\"options.key\" multi=\"false\" to=\"to\"></ap-lookup>`\n      });\n\n      formlyConfigProvider.setType({\n        name: 'lookup-multi',\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n        template: `<ap-lookup list-item=\"model\" key=\"options.key\" multi=\"true\" to=\"to\"></ap-lookup>`\n      });\n\n      formlyConfigProvider.setType({\n        name: 'ui-date',\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n        template: `<input ui-date class=\"form-control\" ng-model=\"model[options.key]\">`\n      });\n\n      formlyConfigProvider.setType({\n        name: 'note',\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n        template: `<textarea class=\"form-control\" msd-elastic ng-model=\"model[options.key]\"></textarea>`\n      });\n\n      formlyConfigProvider.setType({\n        name: 'html',\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n        template: `<div text-angular ng-model=\"model[options.key]\"></div>`\n      });\n\n      formlyConfigProvider.setType({\n        name: 'choice',\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n        template: `<ap-choice list-item=\"model\" key=\"options.key\" to=\"to\"></ap-choice>`\n      });\n\n      formlyConfigProvider.setType({\n        name: 'choice-multi',\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n        template: `<ap-choice list-item=\"model\" key=\"options.key\" multi=\"true\" to=\"to\"></ap-choice>`\n      });\n\n      formlyConfigProvider.setType({\n        name: 'attachments',\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n        template: `<span ap-attachments data-list-item=\"model\"></span>` //TODO: Convert apAttachments to use element selector instead of attribute\n      });\n\n      formlyConfigProvider.setType({\n        name: 'boolean',\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n        template: `<br/><button class=\"btn btn-link\"\n                            ng-click=\"model[options.key] = !model[options.key]\">\n                        <i class=\"fa fa-2x {{ model[options.key] ? 'fa-check-square-o' : 'fa-square-o' }}\"></i>\n                    </button>\n                    <!--Hidden checkbox handles validation-->\n                    <input type=\"checkbox\"\n                           class=\"hidden\"\n                           ng-model=\"model[options.key]\"\n                           ui-validate=\"'validate($value)'\">`\n      });\n    }\n  }\n\n}","/// <reference path=\"formlyTemplates.ts\" />\n\n\nmodule ap.formly {\n    'use strict';\n\n    angular\n        .module('angularPoint')\n        .config(ap.formly.FormlyTemplates)\n        .directive('apLookup', ap.formly.APFormlyLookup)\n        .directive('apChoice', ap.formly.APFormlyChoice);\n\n}"],"sourceRoot":"/source/"}