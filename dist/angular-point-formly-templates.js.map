{"version":3,"sources":["apChoice.ts","apLookup.ts","formlyTemplates.ts","index.ts"],"names":[],"mappings":"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","file":"angular-point-formly-templates.js","sourcesContent":["/// <reference path=\"../typings/tsd.d.ts\" />\r\n\r\nmodule ap.formly {\r\n  'use strict';\r\n\r\n  export function APFormlyChoice() {\r\n\r\n    var directive = {\r\n      scope: {\r\n        key: '=',\r\n        listItem: '=',\r\n        multi: '=',\r\n        to: '=' //Template Options\r\n      },\r\n      bindToController: true,\r\n      controller: APChoiceController,\r\n      controllerAs: 'vm',\r\n      template: '' +\r\n      `<div ng-if=\"!vm.loading\">\r\n          <div ng-if=\"vm.multi\">\r\n              <ui-select multiple ng-model=\"vm.listItem[vm.key]\">\r\n                  <ui-select-match placeholder=\"{{ vm.placeholder }}\">{{ $item }}</ui-select-match>\r\n                  <ui-select-choices data-repeat=\"choice in vm.options | filter:$select.search\">{{ choice }}</ui-select-choices>\r\n              </ui-select>\r\n          </div>\r\n          <div ng-if=\"!vm.multi\">\r\n              <ui-select ng-model=\"vm.listItem[vm.key]\">\r\n                  <ui-select-match placeholder=\"{{ vm.placeholder }}\">{{ $select.selected }}</ui-select-match>\r\n                  <ui-select-choices data-repeat=\"choice in vm.options | filter:$select.search\">{{ choice }}</ui-select-choices>\r\n              </ui-select>\r\n          </div>\r\n      </div>\r\n      <span class=\"form-control\" ng-if=\"vm.loading\">loading...</span>`\r\n\r\n    };\r\n    return directive;\r\n  }\r\n\r\n  function createChoiceArray(options: string[] = []) {\r\n    return options.sort();\r\n  }\r\n\r\n  interface ITemplateOptions extends AngularFormly.ITemplateOptions {\r\n    lookupIdProperty: { (listItem: ListItem<any>): string } | string;\r\n    lookupValueProperty: { (listItem: ListItem<any>): string } | string;\r\n    options: Object[]| IndexedCache<ListItem<any>> | ng.IPromise<Object[]| IndexedCache<ListItem<any>>>;\r\n  }\r\n\r\n\r\n  class APChoiceController {\r\n    key: string;\r\n    loading = true;\r\n    listItem: ListItem<any>;\r\n    multi: boolean;\r\n    options: string[];\r\n    placeholder: string | number;\r\n    to: ITemplateOptions;\r\n    constructor() {\r\n      var vm = this;\r\n      vm.placeholder = vm.to.placeholder || '';\r\n      var fieldDefinition = vm.listItem.getFieldDefinition(vm.key);\r\n\r\n      if (vm.to.options) {\r\n        if (vm.to.options.then) {\r\n          /** Options aren't resolved yet */\r\n          vm.to.options.then(function(options: string[]) {\r\n            vm.options = createChoiceArray(options);\r\n            vm.loading = false;\r\n          });\r\n        } else {\r\n          /** Options passed through directly */\r\n          vm.options = createChoiceArray(vm.to.options);\r\n          vm.loading = false;\r\n        }\r\n      } else if (fieldDefinition.choices || fieldDefinition.Choices) {\r\n        /** Options available on field definition within model */\r\n        vm.options = createChoiceArray(fieldDefinition.choices || fieldDefinition.Choices);\r\n        vm.loading = false;\r\n      } else {\r\n        /** Last chance, get list definition from server and look for choices */\r\n        var model = vm.listItem.getModel();\r\n\r\n        model.extendListMetadata()\r\n          .then(function() {\r\n            if (fieldDefinition.choices || fieldDefinition.Choices) {\r\n              vm.options = createChoiceArray(fieldDefinition.choices || fieldDefinition.Choices);\r\n              vm.loading = false;\r\n            }\r\n          })\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n}","/// <reference path=\"../typings/tsd.d.ts\" />\r\n\r\nmodule ap.formly {\r\n    'use strict';\r\n\r\n    /* @ngInject */\r\n    export function APFormlyLookup() {\r\n\r\n        var directive = {\r\n            scope: {\r\n                key: '=',\r\n                listItem: '=',\r\n                multi: '=',\r\n                to: '='\r\n\r\n            },\r\n            bindToController: true,\r\n            controller: APLookupController,\r\n            controllerAs: 'vm',\r\n            template: '' +\r\n            `<div ng-if=\"!vm.loading\">\r\n                <div ng-if=\"vm.multi\">\r\n                    <ui-select multiple ng-model=\"vm.listItem[vm.key]\">\r\n                        <ui-select-match placeholder=\"{{ vm.placeholder }}\">{{ $item.lookupValue }}</ui-select-match>\r\n                        <ui-select-choices data-repeat=\"lookup in vm.options | filter:{lookupValue: $select.search}\r\n                            track by lookup.lookupId\">{{ lookup.lookupValue }}</ui-select-choices>\r\n                    </ui-select>\r\n                </div>\r\n                <div ng-if=\"!vm.multi\">\r\n                    <ui-select ng-model=\"vm.listItem[vm.key]\">\r\n                        <ui-select-match placeholder=\"{{ vm.placeholder }}\">{{ $select.selected.lookupValue }}</ui-select-match>\r\n                        <ui-select-choices data-repeat=\"lookup in vm.options | filter:{lookupValue: $select.search}\r\n                            track by lookup.lookupId\">{{ lookup.lookupValue }}</ui-select-choices>\r\n                    </ui-select>\r\n                </div>\r\n            </div>\r\n            <span ng-if=\"vm.loading\">loading...</span>`\r\n\r\n        };\r\n        return directive;\r\n    }\r\n\r\n    function createLookupArray(options, lookupIdProperty: { (listItem: ListItem<any>): string } | string, lookupValueProperty: { (listItem: ListItem<any>): string } | string): Lookup[] {\r\n        var sortedLookupValues = [];\r\n        var sampleListItem = _.sample(options);\r\n        if (sampleListItem && sampleListItem.hasOwnProperty('lookupId')) {\r\n            /** Already valid lookup objects */\r\n            sortedLookupValues = _.sortBy(options, 'lookupValue');\r\n        } else if (sampleListItem) {\r\n            /** List items that need to ve converted into lookup objects */\r\n            sortedLookupValues = _.chain(options)\r\n                .map(function(listItem: ListItem<any>) {\r\n                    return {\r\n                        //Default is to use title for lookupValue and id for lookupId but optionally can pass in the property to use for either or\r\n                        //a funtion to return the value\r\n                        lookupId: _.isFunction(lookupIdProperty) ? lookupIdProperty(listItem) : listItem[lookupIdProperty],\r\n                        //can be calculated with either a function or a property name\r\n                        lookupValue: _.isFunction(lookupValueProperty) ? lookupValueProperty(listItem) : listItem[lookupValueProperty]\r\n                    }\r\n                })\r\n                .sortBy('lookupValue')\r\n                .value();\r\n        }\r\n        return sortedLookupValues;\r\n    }\r\n    \r\n    interface ITemplateOptions extends AngularFormly.ITemplateOptions {\r\n        lookupIdProperty: { (listItem: ListItem<any>): string } | string;\r\n        lookupValueProperty: { (listItem: ListItem<any>): string } | string;\r\n        options: Object[] | IndexedCache<ListItem<any>> | ng.IPromise<Object[] | IndexedCache<ListItem<any>>>;\r\n    }\r\n\r\n\r\n    class APLookupController {\r\n        key: string;\r\n        listItem: Object;\r\n        loading = true;\r\n        multi: boolean;\r\n        options: Lookup[];\r\n        placeholder: string | number;\r\n        to: ITemplateOptions;\r\n        constructor() {\r\n            var vm = this;\r\n            //The property to use as the lookupValue if we need to build a Lookup[]\r\n            var lookupIdProperty = vm.to.lookupIdProperty || 'id';\r\n            var lookupValueProperty = vm.to.lookupValueProperty || 'title';\r\n            \r\n            vm.placeholder = vm.to.placeholder || '';\r\n\r\n            if (vm.to.options.then) {\r\n                /** Options aren't resolved yet */\r\n                vm.to.options.then(function(options) {\r\n                    vm.options = createLookupArray(options, lookupIdProperty, lookupValueProperty);\r\n                    vm.loading = false;\r\n                });\r\n            } else {\r\n                vm.options = createLookupArray(vm.to.options, lookupIdProperty, lookupValueProperty);\r\n                vm.loading = false;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n}","/// <reference path=\"apLookup.ts\" />\r\n/// <reference path=\"apChoice.ts\" />\r\n/// <reference path=\"../typings/tsd.d.ts\" />\r\n\r\nmodule ap.formly {\r\n    'use strict';\r\n\r\n  export class FormlyTemplates{\r\n    constructor(formlyConfigProvider: AngularFormly.IFormlyConfig) {\r\n\r\n      formlyConfigProvider.setType({\r\n        name: 'lookup',\r\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\r\n        template: `<ap-lookup list-item=\"model\" key=\"options.key\" multi=\"false\" to=\"to\"></ap-lookup>`\r\n      });\r\n\r\n      formlyConfigProvider.setType({\r\n        name: 'lookup-multi',\r\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\r\n        template: `<ap-lookup list-item=\"model\" key=\"options.key\" multi=\"true\" to=\"to\"></ap-lookup>`\r\n      });\r\n\r\n      formlyConfigProvider.setType({\r\n        name: 'ui-date',\r\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\r\n        template: `<input ui-date class=\"form-control\" ng-model=\"model[options.key]\">`\r\n      });\r\n\r\n      formlyConfigProvider.setType({\r\n        name: 'note',\r\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\r\n        template: `<textarea class=\"form-control\" msd-elastic ng-model=\"model[options.key]\"></textarea>`\r\n      });\r\n\r\n      formlyConfigProvider.setType({\r\n        name: 'html',\r\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\r\n        template: `<div text-angular ng-model=\"model[options.key]\"></div>`\r\n      });\r\n\r\n      formlyConfigProvider.setType({\r\n        name: 'choice',\r\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\r\n        template: `<ap-choice list-item=\"model\" key=\"options.key\" to=\"to\"></ap-choice>`\r\n      });\r\n\r\n      formlyConfigProvider.setType({\r\n        name: 'choice-multi',\r\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\r\n        template: `<ap-choice list-item=\"model\" key=\"options.key\" multi=\"true\" to=\"to\"></ap-choice>`\r\n      });\r\n\r\n      formlyConfigProvider.setType({\r\n        name: 'attachments',\r\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\r\n        template: `<span ap-attachments data-list-item=\"model\"></span>` //TODO: Convert apAttachments to use element selector instead of attribute\r\n      });\r\n\r\n      formlyConfigProvider.setType({\r\n        name: 'boolean',\r\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\r\n        template: `<br/><button class=\"btn btn-link\"\r\n                            ng-click=\"model[options.key] = !model[options.key]\">\r\n                        <i class=\"fa fa-2x {{ model[options.key] ? 'fa-check-square-o' : 'fa-square-o' }}\"></i>\r\n                    </button>\r\n                    <!--Hidden checkbox handles validation-->\r\n                    <input type=\"checkbox\"\r\n                           class=\"hidden\"\r\n                           ng-model=\"model[options.key]\"\r\n                           ui-validate=\"'validate($value)'\">`\r\n      });\r\n    }\r\n  }\r\n\r\n}","/// <reference path=\"formlyTemplates.ts\" />\r\n\r\n\r\nmodule ap.formly {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('angularPoint')\r\n        .config(ap.formly.FormlyTemplates)\r\n        .directive('apLookup', ap.formly.APFormlyLookup)\r\n        .directive('apChoice', ap.formly.APFormlyChoice);\r\n\r\n}"],"sourceRoot":"/source/"}