{"version":3,"sources":["apChoice.ts","apLookup.ts","formlyTemplates.ts","index.ts"],"names":["ap","ap.formly","ap.formly.APFormlyChoice","ap.formly.createLookupArray","ap.formly.APChoiceController","ap.formly.APChoiceController.constructor","ap.formly.APFormlyLookup","ap.formly.APLookupController","ap.formly.APLookupController.constructor","ap.formly.FormlyTemplates","ap.formly.FormlyTemplates.constructor"],"mappings":"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","file":"angular-point-formly-templates.js","sourcesContent":["/// <reference path=\"../typings/tsd.d.ts\" />\r\n\r\nmodule ap.formly {\r\n  'use strict';\r\n\r\n  export function APFormlyChoice() {\r\n\r\n    var directive = {\r\n      scope: {\r\n        key: '=',\r\n        listItem: '=',\r\n        multi: '=',\r\n        options: '='\r\n      },\r\n      controller: APChoiceController,\r\n      controllerAs: 'vm',\r\n      template: '' +\r\n      `<div ng-if=\"!vm.loading\">\r\n          <div ng-if=\"vm.multi\">\r\n              <div ui-select multiple ng-model=\"vm.listItem[vm.key]\">\r\n                  <div ui-select-match placeholder=\"{{ vm.placeholder }}\">{{ $item }}</div>\r\n                  <div ui-select-choices data-repeat=\"choice in vm.options | filter:$select.search\r\n                      track by $index\">{{ choice }}</div>\r\n              </div>\r\n          </div>\r\n          <div ng-if=\"!vm.multi\">\r\n              <div ui-select ng-model=\"vm.listItem[vm.key]\">\r\n                  <div ui-select-match>{{ $select.selected }}</div>\r\n                  <div ui-select-choices data-repeat=\"choice in vm.options | filter:$select.search\r\n                      track by $index\">{{ choice }}</div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      <span class=\"form-control\" ng-if=\"vm.loading\">loading...</span>`\r\n\r\n    };\r\n    return directive;\r\n  }\r\n\r\n  interface IControllerScope extends ng.IScope {\r\n    listItem: ListItem<any>;\r\n    options: ng.IPromise<string[]> | string[];\r\n    key: string;\r\n    multi: boolean;\r\n  }\r\n\r\n\r\n  function createLookupArray(options: string[]) {\r\n    return options.sort();\r\n  }\r\n\r\n\r\n  class APChoiceController {\r\n    key: string;\r\n    loading = true;\r\n    listItem: ListItem<any>;\r\n    multi: boolean;\r\n    options: ng.IPromise<string[]> | string[];\r\n    constructor($scope: IControllerScope) {\r\n      var vm = this;\r\n\r\n      vm.listItem = $scope.listItem;\r\n      vm.key = $scope.key;\r\n      vm.multi = $scope.multi;\r\n      var fieldDefinition = vm.listItem.getFieldDefinition(vm.key);\r\n\r\n      if ($scope.options) {\r\n        if ($scope.options.then) {\r\n          /** Options aren't resolved yet */\r\n          $scope.options.then(function(options: string[]) {\r\n            vm.options = createLookupArray(options);\r\n            vm.loading = false;\r\n          });\r\n        } else {\r\n          /** Options passed through directly */\r\n          vm.options = createLookupArray($scope.options);\r\n          vm.loading = false;\r\n        }\r\n      } else if (fieldDefinition.choices || fieldDefinition.Choices) {\r\n        /** Options available on field definition within model */\r\n        vm.options = createLookupArray(fieldDefinition.choices || fieldDefinition.Choices);\r\n        vm.loading = false;\r\n      } else {\r\n        /** Last chance, get list definition from server and look for choices */\r\n        var model = vm.listItem.getModel();\r\n\r\n        model.extendListMetadata()\r\n          .then(function() {\r\n            if (fieldDefinition.choices || fieldDefinition.Choices) {\r\n              vm.options = createLookupArray(fieldDefinition.choices || fieldDefinition.Choices);\r\n              vm.loading = false;\r\n            }\r\n          })\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n}","/// <reference path=\"../typings/tsd.d.ts\" />\r\nmodule ap.formly {\r\n    'use strict';\r\n\r\n    /* @ngInject */\r\n    export function APFormlyLookup() {\r\n\r\n        var directive = {\r\n            scope: {\r\n                key: '=',\r\n                listItem: '=',\r\n                lookupIdProperty: '=',\r\n                lookupValueProperty: '=',\r\n                multi: '=',\r\n                options: '='\r\n\r\n            },\r\n            controller: APLookupController,\r\n            controllerAs: 'vm',\r\n            template: '' +\r\n            `<div ng-if=\"!vm.loading\">\r\n                <div ng-if=\"vm.multi\">\r\n                    <div ui-select multiple ng-model=\"vm.listItem[vm.key]\">\r\n                        <div ui-select-match>{{ $item.lookupValue }}</div>\r\n                        <div ui-select-choices data-repeat=\"lookup in vm.options | filter:{lookupValue: $select.search}\r\n                            track by lookup.lookupId\">{{ lookup.lookupValue }}</div>\r\n                    </div>\r\n                </div>\r\n                <div ng-if=\"!vm.multi\">\r\n                    <div ui-select ng-model=\"vm.listItem[vm.key]\">\r\n                        <div ui-select-match>{{ $select.selected.lookupValue }}</div>\r\n                        <div ui-select-choices data-repeat=\"lookup in vm.options | filter:{lookupValue: $select.search}\r\n                            track by lookup.lookupId\">{{ lookup.lookupValue }}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <span ng-if=\"vm.loading\">loading...</span>`\r\n\r\n        };\r\n        return directive;\r\n    }\r\n\r\n    interface IControllerScope extends ng.IScope {\r\n        key: string;\r\n        listItem: ListItem<any>;\r\n        lookupIdProperty: { (listItem: ListItem<any>): string } | string;\r\n        lookupValueProperty: { (listItem: ListItem<any>): string } | string;\r\n        multi: boolean;\r\n        options: Object[]| IndexedCache<ListItem<any>> | ng.IPromise<Object[]| IndexedCache<ListItem<any>>>;\r\n    }\r\n\r\n\r\n    function createLookupArray(options, lookupIdProperty: { (listItem: ListItem<any>): string } | string, lookupValueProperty: { (listItem: ListItem<any>): string } | string): Lookup[] {\r\n        var sortedLookupValues;\r\n        var sampleListItem = _.sample(options);\r\n        if (sampleListItem.hasOwnProperty('lookupId')) {\r\n            /** Already valid lookup objects */\r\n            sortedLookupValues = _.sortBy(options, 'lookupValue');\r\n        } else {\r\n            sortedLookupValues = _.chain(options)\r\n                .map(function(listItem: ListItem<any>) {\r\n                    return {\r\n                        //Default is to use title for lookupValue and id for lookupId but optionally can pass in the property to use for either or\r\n                        //a funtion to return the value\r\n                        lookupId: _.isFunction(lookupIdProperty) ? lookupIdProperty(listItem) : listItem[lookupIdProperty],\r\n                        //can be calculated with either a function or a property name\r\n                        lookupValue: _.isFunction(lookupValueProperty) ? lookupValueProperty(listItem) : listItem[lookupValueProperty]\r\n                    }\r\n                })\r\n                .sortBy('lookupValue')\r\n                .value();\r\n        }\r\n        return sortedLookupValues;\r\n    }\r\n\r\n\r\n    class APLookupController {\r\n        key: string;\r\n        listItem: Object;\r\n        lookupValueProperty: string;\r\n        loading = true;\r\n        multi: boolean;\r\n        options: Lookup[];\r\n        constructor($scope: IControllerScope) {\r\n            var vm = this;\r\n            //The property to use as the lookupValue if we need to build a Lookup[]\r\n            var lookupIdProperty = $scope.lookupIdProperty || 'id';\r\n            var lookupValueProperty = $scope.lookupValueProperty || 'title';\r\n\r\n            vm.listItem = $scope.listItem;\r\n            vm.key = $scope.key;\r\n            vm.multi = $scope.multi;\r\n\r\n            if ($scope.options.then) {\r\n                /** Options aren't resolved yet */\r\n                $scope.options.then(function(options) {\r\n                    vm.options = createLookupArray(options, lookupIdProperty, lookupValueProperty);\r\n                    vm.loading = false;\r\n                });\r\n            } else {\r\n                vm.options = createLookupArray($scope.options, lookupIdProperty, lookupValueProperty);\r\n                vm.loading = false;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n}","/// <reference path=\"apLookup.ts\" />\r\n/// <reference path=\"apChoice.ts\" />\r\n\r\nmodule ap.formly {\r\n    'use strict';\r\n\r\n  export class FormlyTemplates{\r\n    constructor(formlyConfigProvider) {\r\n\r\n      formlyConfigProvider.setType({\r\n        name: 'lookup',\r\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\r\n        template: `<ap-lookup list-item=\"model\" key=\"options.key\" multi=\"false\" lookup-value-property=\"to.lookupValueProperty\" lookup-id-property=\"to.lookupIdProperty\" options=\"to.options\"></ap-lookup>`\r\n      });\r\n\r\n      formlyConfigProvider.setType({\r\n        name: 'lookup-multi',\r\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\r\n        template: `<ap-lookup list-item=\"model\" key=\"options.key\" multi=\"true\" lookup-value-property=\"to.lookupValueProperty\" lookup-id-property=\"to.lookupIdProperty\" options=\"to.options\"></ap-lookup>`\r\n      });\r\n\r\n      formlyConfigProvider.setType({\r\n        name: 'ui-date',\r\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\r\n        template: `<input ui-date class=\"form-control\" ng-model=\"model[options.key]\">`\r\n      });\r\n\r\n      formlyConfigProvider.setType({\r\n        name: 'note',\r\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\r\n        template: `<textarea class=\"form-control\" msd-elastic ng-model=\"model[options.key]\"></textarea>`\r\n      });\r\n\r\n      formlyConfigProvider.setType({\r\n        name: 'html',\r\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\r\n        template: `<div text-angular ng-model=\"model[options.key]\"></div>`\r\n      });\r\n\r\n      formlyConfigProvider.setType({\r\n        name: 'choice',\r\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\r\n        template: `<ap-choice list-item=\"model\" key=\"options.key\" options=\"to.options\"></ap-choice>`\r\n      });\r\n\r\n      formlyConfigProvider.setType({\r\n        name: 'choice-multi',\r\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\r\n        template: `<ap-choice list-item=\"model\" key=\"options.key\" options=\"to.options\" multi=\"true\"></ap-choice>`\r\n      });\r\n\r\n      formlyConfigProvider.setType({\r\n        name: 'attachments',\r\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\r\n        template: `<span ap-attachments data-list-item=\"model\"></span>` //TODO: Convert apAttachments to use element selector instead of attribute\r\n      });\r\n\r\n      formlyConfigProvider.setType({\r\n        name: 'boolean',\r\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\r\n        template: `\r\n                <button class=\"btn btn-link\"\r\n                        ng-click=\"model[options.key] = !model[options.key]\">\r\n                    <i class=\"fa fa-2x {{ model[options.key] ? 'fa-check-square-o' : 'fa-square-o' }}\"></i>\r\n                </button>\r\n                <!--Hidden checkbox handles validation-->\r\n                <input type=\"checkbox\"\r\n                       class=\"hidden\"\r\n                       ng-model=\"model[options.key]\"\r\n                       ui-validate=\"'validate($value)'\">`\r\n      });\r\n    }\r\n  }\r\n\r\n}","/// <reference path=\"formlyTemplates.ts\" />\r\n\r\n\r\nmodule ap.formly {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('angularPoint')\r\n        .config(ap.formly.FormlyTemplates)\r\n        .directive('apLookup', ap.formly.APFormlyLookup)\r\n        .directive('apChoice', ap.formly.APFormlyChoice);\r\n\r\n}"],"sourceRoot":"/source/"}